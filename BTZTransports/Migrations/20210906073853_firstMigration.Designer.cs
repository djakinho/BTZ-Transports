// <auto-generated />
using System;
using BTZTransports.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BTZTransports.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210906073853_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BTZTransports.Models.Abastecimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CombustivelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCombustivel")
                        .HasColumnType("int");

                    b.Property<int>("IdMotorista")
                        .HasColumnType("int");

                    b.Property<int>("IdVeiculo")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeAbastecida")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CombustivelId");

                    b.HasIndex("IdMotorista");

                    b.HasIndex("IdVeiculo");

                    b.ToTable("Abastecimento");
                });

            modelBuilder.Entity("BTZTransports.Models.Combustivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Combustivel");
                });

            modelBuilder.Entity("BTZTransports.Models.Motorista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoriaCnh")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cnh")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Motorista");
                });

            modelBuilder.Entity("BTZTransports.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnoFabricacao")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<double>("CapacidadeMaximaTanque")
                        .HasColumnType("float");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdCombustivel")
                        .HasColumnType("int");

                    b.Property<string>("NomeVeiculo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCombustivel");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("BTZTransports.Models.Abastecimento", b =>
                {
                    b.HasOne("BTZTransports.Models.Combustivel", "Combustivel")
                        .WithMany("Abastecimentos")
                        .HasForeignKey("CombustivelId");

                    b.HasOne("BTZTransports.Models.Motorista", "Motorista")
                        .WithMany("Abastecimentos")
                        .HasForeignKey("IdMotorista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BTZTransports.Models.Veiculo", "Veiculo")
                        .WithMany("Abastecimentos")
                        .HasForeignKey("IdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combustivel");

                    b.Navigation("Motorista");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("BTZTransports.Models.Veiculo", b =>
                {
                    b.HasOne("BTZTransports.Models.Combustivel", "TipoCombustivel")
                        .WithMany("Veiculos")
                        .HasForeignKey("IdCombustivel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCombustivel");
                });

            modelBuilder.Entity("BTZTransports.Models.Combustivel", b =>
                {
                    b.Navigation("Abastecimentos");

                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("BTZTransports.Models.Motorista", b =>
                {
                    b.Navigation("Abastecimentos");
                });

            modelBuilder.Entity("BTZTransports.Models.Veiculo", b =>
                {
                    b.Navigation("Abastecimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
